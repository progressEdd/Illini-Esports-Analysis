---
title: "Test 1"
subtitle: "Edward Tang"
output:
  pdf_document: default
  html_notebook: default
---

When import the dataset, please choose the excel import option. This dataset will have errors if you try to save it as .csv file, or import using csv file option.

# Importing the data
```{r}
options(scipen=999)
df <- read.csv("~/Documents/BADM 557/Rscripts/Test_1_ICO.csv")
df
```
## converting characters to numbers
```{r}
class(df$Bitcoinvolume)
class(df$SPClose)
class(df$Bitcoinclose)
```

```{r}
df$SPClose <- as.numeric(as.character(df$SPClose)) 
df$Bitcoinclose <- as.numeric(as.character(df$Bitcoinclose))
df
```

# “Test 1 ICO.csv” contains information of 146 (initial coin offering) ICOs

* “TVolume” and “DirectTweet” measure twitter activity before ICOs
* The data file also contains information about bitcoin and S&P500 activities before ICOs
* The target variable is USDRaised 

# 1. what is the mean and standard deviation of TVolume?
```{r}
mean_TVol <- mean(df$TVolume, na.rm = TRUE)
sd_TVol <- sd(df$TVolume, na.rm = TRUE)
print(mean_TVol)
print(sd_TVol)
```

# 2. what is the range of TVolume?
```{r}
range_TVolume <- range(df$TVolume)
range_TVolume
```

# 3. what is the mean of TVolume for each category of USDRaised?
```{r}
TVolume_USD <- aggregate (df$TVolume, list(df$USDRaised), mean)
TVolume_USD
```

# 4. Please draw a histogram of Tvolume for USDRaised== `low` and USDRaised==`high` (two separate histograms)
* x label "TVolume", y label "Frequency",
* main label "Distribution of Bitcoin volume"

## `USDRaised == 'low'`
```{r}
# df$Listing.Price[df$Zip==61822]
hist(df$TVolume[df$USDRaised=="low"], main = "Distribution of Bitcoin volume", xlab = "TVolume", ylab = "Frequency")
```
## `USDRaised == 'high'`
```{r}
hist(df$TVolume[df$USDRaised=="high"], main = "Distribution of Bitcoin volume", xlab = "TVolume", ylab = "Frequency")
```

# 5. what is the average bitcoin volume for each category of USDRaised?

```{r}
BCvolume_USD <- aggregate (df$Bitcoinvolume, list(df$USDRaised), mean)
BCvolume_USD
```



# 6. Use a plot to show the relationship between bitcoin volume and SPvolume. Is there a relationship between the two?
  According to the graph there doesn't appear to be a relationship between Bitcoin Volume and SPVolume
```{r}
plot(x=df$Bitcoinvolume, y=df$SPvolume, 
     main = "Bitcoin Volume vs SPVolume", 
     xlab = "Bitcoin Volume",
     ylab = "SPVolume"
     )
```


# 7. Use the first 120 coin as training set, the rest as testing set.
* build a KNN model to predict the level of USDRaised for each 
* ICO in the testing set.
* set.seed(1), use tuneLength=10

```{r}
colnames(df)
```
```{R}
library(caret)

KNNdata <- df     

colnames(KNNdata) #look at what columns are in the new dataframe

#-----split data into training and testing
# use training set to find out the best k (how many neighbor to use)
# use testing set to predict the value of target variable
nrow(KNNdata)
KNNtrain<-KNNdata[c(1:120),] 

KNNtest<-KNNdata[c(121:146),] 

is.na(KNNtrain)
KNNtrain[is.na(KNNtrain)]<-0 #change missing values to 0
KNNtest[is.na(KNNtest)]<-0


#-------run Knn ------
?train
set.seed(1) 
#setseed will make sure the calculation start from the same line
#so you will always get the same results

colnames(KNNtrain)
KNNtrain
fit <- train( KNNtrain[,-9],   KNNtrain$USDRaised,
              preProcess = c("center","scale"),
              method = "knn",
              tuneLength = 10)

fit
```

## Please report the number of neighbors used, and paste the accuracy #plot of the model trained 
I used a model of k = 23.
```{r}
fit
```
```{r}
plot(fit)
```


# 8. Compare to the actual values, how many cases in the test set are #correctly predicted? 
 * (use table function).
```{r}
#---------------Validate the model
predictknn<-predict(fit,KNNtest)
predictknn
```
```{r}
#add prediction to test dataset to check accuracy
KNNtest<-cbind(KNNtest,predictknn)
KNNtest
```

```{r}
table(KNNtest$USDRaised,KNNtest$predictknn)
```

# 9. Please let me know your suggestions for the class.
  * overall
    * class for me is going fine, been a transition from using python to R
    * but there seems to be a bimodal distribution of experience for people, where you have people who have no programming experience all the way to people who have programmed in Python before.
  * Content
      * more experience working with machine learning libraries would be nice
      * more practice being able to solve problems where we are given a model and we need to judge how good it is, we got some intro with KNN, so more with other ML models would be nice
        * at my internship I have a assignment where I have been given scripts and tasked with figuring out how effective the model is and what's happening
        * my supervisor also suggested looking into the python shap package, where it visualizes which columns/factors contribute a lot to the machine learning model
  * Class logistics
    * Potential use notebooks for homework questions
      * that way we wouldn't need to copy paste stuff from a word doc
    * For future classes, python + jupyter lab might be helpful for industry. It seems that R is really only used for research
      * In retrospect, stuff you learn in R can transfer to python, but R Studio really holds your hand with installing packages
      * it could also be more of a headache to help everyone set it up, but I think people would appreciate
  
