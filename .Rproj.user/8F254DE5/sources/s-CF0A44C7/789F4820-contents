---
title: "8 R: Data Manipulation"
output: html_notebook
---
# loading data
## using `read.table` for non-csv files
```{r}
read.table("friends.csv", header=T, sep=',')
```

## using `read_csv`
```{r}
df_f = read.csv("friends.csv")
df_s = read.csv("Softdrink.csv")
df_f
```

# Exercise
## gas consumption
```{r}
gas=read.csv("gas_consumption.csv")
gas = read.table("gas_consumption.csv", header = T, sep=',')
gas
```
# Subsetting a dataframe
```{r}
df_f$Score[1:5]
```

## subsetting a value in the 4th row, 3rd column
```{r}
df_f[4,3]
```

## extracting the 2nd and 5th rows
```{r}
df_f[c(2,5), ]
```

## extracting data based on criterion
```{r}
friendsG1 = df_f[df_f$GroupNum==1,]
friendsG1
```

# Gas consumption exercise

1. value in 20th row, 4th column
```{R}
gas[20,4]
```
2. 3rd column name it gas.sub1
```{r}
gas.sub1 = gas[ , 3]
gas.sub1
```

3. first 10 rows, all but 5th column call it gas.sub2
```{r}
gas.sub2 = gas[1:10 , -5 ]
gas.sub2
```

4. all rows when month is "Feb" call it gas.feb
```{r}
gas.feb = gas[gas$Month == "Feb",]
gas.feb
```

# Iq exercise

1. read iq.csv
```{r}
iq = read.csv("iq.csv")
iq
```

2. 15-30th iq scores, call it iq.sub
```{r}
iq.sub = iq[15:30,]
iq.sub
```
3. standard deviation
```{r}
sd(iq.sub)
```

# creating a data frame
```{r}
# Example
name = c("Mary", "Mike") 
midterm = c(86, 90) 
major = c("Math", "Management")
df1 = data.frame(name, midterm, major)
df2 = data.frame(name="Alex", age=30, creditlimit=5000)

df1
df2
```

# creating a data frame exercise
## using global variables
```{r}
name = c("John", "Mary" )
spending = c(1732,2644)
experience = c(11,17)
customer = data.frame(name,spending,experience)
customer
```
## assigning it inside a data.frame without global variables
```{r}
customer_df = data.frame(Name = c("John", "Mary" ), 
                         Spending = c(1732,2644),
                         Experience = c(11,17))
customer_df
```

# Friends data set example
## geting information about the dataset
```{r}
df_f
summary(df_f)
str(df_f)
head(df_f)
tail(df_f)
```

## editing values in a friends dataset
```{r}
friends1 = edit(df_f)
```

## editing values without `edit()`
changing a value in row 1 column 3 to 3000
```{r}
friends = df_f
friends[1,3] = 3000
friends
```

## getting the frequency 
works for both numeric and categorical values
```{r}
table(friends$GroupNum)
```
# iq group exercise
## reading the data
```{r}
iq= read.csv("iq.csv", header=T)
iq
```
## 1.Get the structure of the object iq
```{r}
str(iq)
```
## 2.Get the five number summary and the mean of the iq data.
```{r}
summary(iq)
```
## 3.Change the first three values of iq to 100, 101, 102, and name the new data iq1
```{r}
iq1 = iq
iq1[1:3, 1] = c(100,101,102)
iq1
```

# softdrink exercise
## read the data
```{r}
softdrink= read.csv("Softdrink.csv", header=T)
softdrink
```

## Give a table summarizing the distribution of Brand.Purchased
R fills white space in headers to periods (.)
```{r}
table(softdrink$Brand.Purchased)
```

# Making Matrices in R
R by default fills in the matrix by column
```{r}
A = matrix(1:6, nrow=2, ncol=3)
A
```
```{r}
B = matrix(c(3,1,5,4,2,8), nrow = 2, ncol =3)
B
```

# combining dataframes together
you can use `rbind()` to combine rows, and `cbind()` to combine columns

## `rbind()`
```{r}
data1 = data.frame(name="Mike", income=50)
data2 = data.frame(name="Jack", income=60)
data3 = rbind(data1, data2)
data3
```

## `cbind()`
```{r}
data4 = data.frame(experience=c(10,12))
data5 = cbind(data3, data4)

data5
```

# Group exercise
create and combine 2 dataframes

## create sale 1
```{r}
sale1 = data.frame(brand= c("coke", "sprite"),
                   sale = c(109,80))
sale1
```
## create sale 2
```{r}
sale2 = data.frame(brand="pepsi", sale =95)
sale2
```

## combining the two data frames
```{r}
sale = rbind(sale1, sale2)
sale
```


