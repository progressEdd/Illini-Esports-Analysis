---
title: "Exam 1 Review"
subtitle: "Edward Tang"
output: html_notebook
---
# Importing the data
```{r}
options(scipen=999)
df <- read.csv("~/Documents/BADM 557/Rscripts/8_Review excercise.csv")
df
```

# 1. what is the mean and standard deviation of Age?
```{r}
mean_age <- mean(df$Age, na.rm = TRUE)
sd_age <- sd(df$Age, na.rm = TRUE)
print(mean_age)
print(sd_age)
```

# 2. what is the range of View_length?
```{r}
view_length <- range(df$View_length)
view_length
```

# 3. what is the mean of View_length in the two states?
```{r}
state_length_mean <- aggregate (df$View_length, list(df$State), mean)
state_length_mean
```

# 4. what is average View_length of male and female?
```{r}
mf_length <- aggregate (df$View_length, list(df$Gender), mean)
mf_length
```

# 5. histogram of Age, graph title "Distribution of age", 
## make x label "Age", y label "Frequency"
## Make the x from 0 to 80, y from 0 to 20
```{r}
hist(df$Age, main = "Distribution of age", xlab = "Age", breaks = 10, xlim = c(0,80), ylim = c(0,20))
```

# 6. Separate histogram of Age for viewers who liked the video, and did not like the video
```{r}
hist(df$Age, main = "Distribution of age", xlab = "Age", breaks = 10, xlim = c(0,80), ylim = c(0,20),
     col = as.factor(df$Like))
```

# 7. Use a graph to show if there is any relationship between Age and number of friends?
it doesn't that there's any relationship between age and number of friends
```{r}
plot(x=df$Age, y=df$Friends, 
     main = "Age Vs Number of Friends", 
     xlab = "Age",
     ylab = "Number of Friends"
     )
```
```{r}
plot(x=df$Friends, y=df$Age, 
     main = "Age Vs Number of Friends", 
     xlab = "Number of Friends",
     ylab = "Age"
     )
```
# 8. Use a graph to show if there is any relationship between age and how long the viewer watch the video?
```{r}
plot(x=df$Age, y=df$View_length, 
     main = "Age Vs Number of Friends", 
     xlab = "Age",
     ylab = "View Length"
     )
```

# 9. Use the first 35 viewer as training set, build a KNN model to predict whether the 
##  last 5 viewers will Like the video? 
##  (Use only numeric features to build the model, ID should not be used )
##  set.seed(1); use tuneLength=10
```{r}
colnames(df)
```

```{R}
library(caret)

KNNdata <- df[,c(2,5,6,7)]     

colnames(KNNdata) #look at what columns are in the new dataframe

#-----split data into training and testing
# use training set to find out the best k (how many neighbor to use)
# use testing set to predict the value of target variable
nrow(KNNdata)
KNNtrain<-KNNdata[c(1:35),] #select first 200 rows as training set to find the best k

KNNtest<-KNNdata[c(36:40),] #predict the value of traditional cash on cash for the last 96 rows

is.na(KNNtrain)
KNNtrain[is.na(KNNtrain)]<-0 #change missing values to 0
KNNtest[is.na(KNNtest)]<-0


#-------run Knn ------
?train
set.seed(1) 
#setseed will make sure the calculation start from the same line
#so you will always get the same results

colnames(KNNtrain)
KNNtrain
fit <- train( KNNtrain[,-4],   KNNtrain$Like,
              preProcess = c("center","scale"),
              method = "knn",
              tuneLength = 10)

fit
#RMSE root-mean-square error, MAE mean absolute error,
plot(fit)


#---------------Validate the model
predictknn<-predict(fit,KNNtest)
predictknn

#add prediction to test dataset to check accuracy
KNNtest<-cbind(KNNtest,predictknn)
View(KNNtest)

#since the target variable is continues, we calculate the standard error
error=sqrt(sum((KNNtest$predictknn-KNNtest$Like)^2))/nrow(KNNtest)
error
table(KNNtest$Like,KNNtest$predictknn)
```



# 10. Compare to the actual values, how many cases out of the 5 cases are correctly predicted?
